import{_ as e,c as t,a0 as s,o as i}from"./chunks/framework.BGhKK5hB.js";const k=JSON.parse('{"title":"Datapack Options for MT Inventory Weight","description":"How to use datapacks to configure custom item weights in the MT Inventory Weight mod.","frontmatter":{"title":"Datapack Options for MT Inventory Weight","description":"How to use datapacks to configure custom item weights in the MT Inventory Weight mod."},"headers":[],"relativePath":"guide/datapacks.md","filePath":"guide/datapacks.md","lastUpdated":1726344557000}'),o={name:"guide/datapacks.md"};function n(r,a,l,p,h,c){return i(),t("div",null,a[0]||(a[0]=[s(`<h1 id="datapack-options-for-mt-inventory-weight" tabindex="-1"><strong>Datapack Options for MT Inventory Weight</strong> <a class="header-anchor" href="#datapack-options-for-mt-inventory-weight" aria-label="Permalink to &quot;**Datapack Options for MT Inventory Weight**&quot;">​</a></h1><p>Datapacks are a built-in Minecraft feature that allows you to customize game mechanics by adding or modifying content without altering the core game or mods. In the context of <strong>MT Inventory Weight</strong>, datapacks can be used to configure the number of pockets for armor items.</p><h2 id="why-use-datapacks-with-mt-inventory-weight" tabindex="-1"><strong>Why Use Datapacks with MT Inventory Weight?</strong> <a class="header-anchor" href="#why-use-datapacks-with-mt-inventory-weight" aria-label="Permalink to &quot;**Why Use Datapacks with MT Inventory Weight?**&quot;">​</a></h2><p>Using datapacks with <strong>MT Inventory Weight</strong> allows you to:</p><ul><li><strong>Define pockets for armor</strong>: Assign the number of pockets to different armor items based on your gameplay preferences.</li><li><strong>Extend the mod</strong>: Include custom or modded armor items and specify their pockets.</li><li><strong>Customize gameplay</strong>: Adjust how pockets affect item carrying capacity to better fit your world.</li></ul><h2 id="how-datapacks-work-for-armor-pockets" tabindex="-1"><strong>How Datapacks Work for Armor Pockets</strong> <a class="header-anchor" href="#how-datapacks-work-for-armor-pockets" aria-label="Permalink to &quot;**How Datapacks Work for Armor Pockets**&quot;">​</a></h2><p>The mod looks for <code>.json</code> files within the <code>inventoryweight</code> folder of a datapack. These files define the number of pockets for armor items. When the world or server loads, the mod reads these <code>.json</code> files and applies the specified configurations to the armor items in the game.</p><h2 id="steps-to-create-a-datapack-for-armor-pockets" tabindex="-1"><strong>Steps to Create a Datapack for Armor Pockets</strong> <a class="header-anchor" href="#steps-to-create-a-datapack-for-armor-pockets" aria-label="Permalink to &quot;**Steps to Create a Datapack for Armor Pockets**&quot;">​</a></h2><p>Here’s how you can create a datapack to define armor pockets for <strong>MT Inventory Weight</strong>.</p><h3 id="create-the-datapack-folder-structure" tabindex="-1"><strong>Create the Datapack Folder Structure</strong> <a class="header-anchor" href="#create-the-datapack-folder-structure" aria-label="Permalink to &quot;**Create the Datapack Folder Structure**&quot;">​</a></h3><ol><li>Navigate to the <code>datapacks</code> folder inside your Minecraft world or server directory. <ul><li>Example path: <code>world/datapacks/</code></li></ul></li><li>Inside the <code>datapacks</code> folder, create a new folder for your datapack, e.g., <code>[datapack_namespace]</code>.</li><li>Inside this folder, create another folder called <code>data</code>.</li><li>Inside <code>data</code>, create a folder called <code>inventoryweight</code> (this name is important as the mod looks for this folder).</li><li>Inside <code>inventoryweight</code>, create a <code>.json</code> file to hold your armor pockets definitions. For example, name it <code>armor_pockets.json</code>.</li></ol><p>The folder structure should look like this:</p><div class="language-md vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">md</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">datapacks/</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">└── [</span><span style="--shiki-light:#032F62;--shiki-dark:#DBEDFF;--shiki-light-text-decoration:underline;--shiki-dark-text-decoration:underline;">datapack_namespace</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]/</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    └── data/</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        └── inventoryweight/</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            └── items.json</span></span></code></pre></div><p>Make sure to follow this structure so that the <strong>MT Inventory Weight</strong> mod can properly detect and load your custom configurations.</p><h3 id="configuring-items-json" tabindex="-1"><strong>Configuring <code>items.json</code></strong> <a class="header-anchor" href="#configuring-items-json" aria-label="Permalink to &quot;**Configuring \`items.json\`**&quot;">​</a></h3><p>Inside <code>items.json</code>, you will define custom pockets vlaues using the following format:</p><div class="language-json vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;items&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: [</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">      &quot;item&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;minecraft:leather_helmet&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">      &quot;pockets&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">5</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">      &quot;item&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;techreborn:quantum_leggins&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">      &quot;pockets&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  ]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><ul><li><code>&quot;item&quot;</code>: The full item ID (including the namespace, e.g., minecraft: or a mod&#39;s namespace).</li><li><code>&quot;pockets&quot;</code>: The number of pockets to apply to the armor item.</li></ul><p>Activating the Datapack</p><p>Once the folder structure and <code>items.json</code> file are properly set up, the datapack will be automatically loaded when your Minecraft world or server starts. If you make changes to the datapack, use the <code>/reload</code> command in Minecraft to apply them.</p>`,20)]))}const g=e(o,[["render",n]]);export{k as __pageData,g as default};
